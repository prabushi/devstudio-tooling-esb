/**
 *
 * $Id$
 */
package org.wso2.developerstudio.eclipse.gmf.esb.validation;

import org.eclipse.emf.common.util.EList;

import org.wso2.developerstudio.eclipse.gmf.esb.CallTemplateParameter;
import org.wso2.developerstudio.eclipse.gmf.esb.CloudConnectorOperationInputConnector;
import org.wso2.developerstudio.eclipse.gmf.esb.CloudConnectorOperationOutputConnector;
import org.wso2.developerstudio.eclipse.gmf.esb.CloudConnectorOperationParamEditorType;
import org.wso2.developerstudio.eclipse.gmf.esb.RegistryKeyProperty;

/**
 * A sample validator interface for {@link org.wso2.developerstudio.eclipse.gmf.esb.CloudConnectorOperation}.
 * This doesn't really do anything, and it's not a real EMF artifact.
 * It was generated by the org.eclipse.emf.examples.generator.validator plug-in to illustrate how EMF's code generator can be extended.
 * This can be disabled with -vmargs -Dorg.eclipse.emf.examples.generator.validator=false.
 */
public interface CloudConnectorOperationValidator {
	boolean validate();

	boolean validateInputConnector(CloudConnectorOperationInputConnector value);
	boolean validateOutputConnector(CloudConnectorOperationOutputConnector value);
	boolean validateConnectorParameters(EList<CallTemplateParameter> value);
	boolean validateConfigRef(String value);
	boolean validateConnectorName(String value);
	boolean validateOperationName(String value);
	boolean validateCloudConnectorName(String value);
	boolean validateNewConfig(RegistryKeyProperty value);
	boolean validateAvailableConfigs(String value);
	boolean validateParameterEditorType(CloudConnectorOperationParamEditorType value);
}
