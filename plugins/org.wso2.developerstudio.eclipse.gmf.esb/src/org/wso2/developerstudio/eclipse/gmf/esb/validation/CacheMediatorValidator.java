/**
 *
 * $Id$
 */
package org.wso2.developerstudio.eclipse.gmf.esb.validation;

import org.wso2.developerstudio.eclipse.gmf.esb.CacheAction;
import org.wso2.developerstudio.eclipse.gmf.esb.CacheHTTPMethods;
import org.wso2.developerstudio.eclipse.gmf.esb.CacheHttpMethods;
import org.wso2.developerstudio.eclipse.gmf.esb.CacheImplementationType;
import org.wso2.developerstudio.eclipse.gmf.esb.CacheMediatorInputConnector;
import org.wso2.developerstudio.eclipse.gmf.esb.CacheMediatorOnHitOutputConnector;
import org.wso2.developerstudio.eclipse.gmf.esb.CacheMediatorOutputConnector;
import org.wso2.developerstudio.eclipse.gmf.esb.CacheProtocolType;
import org.wso2.developerstudio.eclipse.gmf.esb.CacheScope;
import org.wso2.developerstudio.eclipse.gmf.esb.CacheSequenceType;
import org.wso2.developerstudio.eclipse.gmf.esb.HashGenerator;
import org.wso2.developerstudio.eclipse.gmf.esb.MediatorFlow;
import org.wso2.developerstudio.eclipse.gmf.esb.RegistryKeyProperty;

/**
 * A sample validator interface for {@link org.wso2.developerstudio.eclipse.gmf.esb.CacheMediator}.
 * This doesn't really do anything, and it's not a real EMF artifact.
 * It was generated by the org.eclipse.emf.examples.generator.validator plug-in to illustrate how EMF's code generator can be extended.
 * This can be disabled with -vmargs -Dorg.eclipse.emf.examples.generator.validator=false.
 */
public interface CacheMediatorValidator {
	boolean validate();

	boolean validateCacheId(String value);
	boolean validateCacheScope(CacheScope value);

	boolean validateCacheAction(CacheAction value);
	boolean validateHashGenerator(HashGenerator value);

	boolean validateCacheTimeout(int value);
	boolean validateMaxMessageSize(int value);
	boolean validateImplementationType(CacheImplementationType value);
	boolean validateMaxEntryCount(int value);
	boolean validateSequenceType(CacheSequenceType value);
	boolean validateSequenceKey(RegistryKeyProperty value);
	boolean validateInputConnector(CacheMediatorInputConnector value);
	boolean validateOutputConnector(CacheMediatorOutputConnector value);
	boolean validateOnHitOutputConnector(CacheMediatorOnHitOutputConnector value);
	boolean validateMediatorFlow(MediatorFlow value);

	boolean validateResponseCodes(String value);

	boolean validateHeadersToExcludeInHash(String value);

	boolean validateHashGenerator(String value);

	boolean validateProtocolType(CacheProtocolType value);

	boolean validateCacheProtocolMethods(CacheHttpMethods value);

	boolean validateProtocolMethods(CacheHTTPMethods value);
}
