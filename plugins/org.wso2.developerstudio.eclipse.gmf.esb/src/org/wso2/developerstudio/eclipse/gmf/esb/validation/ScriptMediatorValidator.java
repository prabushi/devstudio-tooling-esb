/**
 *
 * $Id$
 */
package org.wso2.developerstudio.eclipse.gmf.esb.validation;

import org.eclipse.emf.common.util.EList;

import org.wso2.developerstudio.eclipse.gmf.esb.NamespacedProperty;
import org.wso2.developerstudio.eclipse.gmf.esb.RegistryKeyProperty;
import org.wso2.developerstudio.eclipse.gmf.esb.ScriptLanguage;
import org.wso2.developerstudio.eclipse.gmf.esb.ScriptMediatorInputConnector;
import org.wso2.developerstudio.eclipse.gmf.esb.ScriptMediatorOutputConnector;
import org.wso2.developerstudio.eclipse.gmf.esb.ScriptType;
import org.wso2.developerstudio.eclipse.gmf.esb.scriptKeyTypeEnum;

/**
 * A sample validator interface for {@link org.wso2.developerstudio.eclipse.gmf.esb.ScriptMediator}.
 * This doesn't really do anything, and it's not a real EMF artifact.
 * It was generated by the org.eclipse.emf.examples.generator.validator plug-in to illustrate how EMF's code generator can be extended.
 * This can be disabled with -vmargs -Dorg.eclipse.emf.examples.generator.validator=false.
 */
public interface ScriptMediatorValidator {
	boolean validate();

	boolean validateScriptType(ScriptType value);
	boolean validateScriptLanguage(ScriptLanguage value);
	boolean validateMediateFunction(String value);
	boolean validateScriptDynamicKey(NamespacedProperty value);
	boolean validateScriptBody(String value);
	boolean validateInputConnector(ScriptMediatorInputConnector value);
	boolean validateOutputConnector(ScriptMediatorOutputConnector value);
	boolean validateKeyType(scriptKeyTypeEnum value);
	boolean validateScriptStaticKey(RegistryKeyProperty value);
	boolean validateScriptKeys(EList<RegistryKeyProperty> value);
}
