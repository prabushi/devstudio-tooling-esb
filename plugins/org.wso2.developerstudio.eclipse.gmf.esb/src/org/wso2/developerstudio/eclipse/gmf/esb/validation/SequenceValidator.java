/**
 *
 * $Id$
 */
package org.wso2.developerstudio.eclipse.gmf.esb.validation;

import org.eclipse.emf.common.util.EList;

import org.wso2.developerstudio.eclipse.gmf.esb.KeyType;
import org.wso2.developerstudio.eclipse.gmf.esb.Mediator;
import org.wso2.developerstudio.eclipse.gmf.esb.NamespacedProperty;
import org.wso2.developerstudio.eclipse.gmf.esb.RegistryKeyProperty;
import org.wso2.developerstudio.eclipse.gmf.esb.SequenceInputConnector;
import org.wso2.developerstudio.eclipse.gmf.esb.SequenceOutputConnector;

/**
 * A sample validator interface for {@link org.wso2.developerstudio.eclipse.gmf.esb.Sequence}.
 * This doesn't really do anything, and it's not a real EMF artifact.
 * It was generated by the org.eclipse.emf.examples.generator.validator plug-in to illustrate how EMF's code generator can be extended.
 * This can be disabled with -vmargs -Dorg.eclipse.emf.examples.generator.validator=false.
 */
public interface SequenceValidator {
	boolean validate();

	boolean validateName(String value);
	boolean validateKey(String value);
	boolean validateInputConnector(SequenceInputConnector value);
	boolean validateOutputConnector(EList<SequenceOutputConnector> value);
	boolean validateIncludedMediators(EList<Mediator> value);
	boolean validateReceiveSequence(boolean value);
	boolean validateDuplicate(boolean value);
	boolean validateReferringSequenceType(KeyType value);
	boolean validateDynamicReferenceKey(NamespacedProperty value);
	boolean validateStaticReferenceKey(RegistryKeyProperty value);
}
