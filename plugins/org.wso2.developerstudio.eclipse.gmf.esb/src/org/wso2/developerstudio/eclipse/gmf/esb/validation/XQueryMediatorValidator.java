/**
 *
 * $Id$
 */
package org.wso2.developerstudio.eclipse.gmf.esb.validation;

import org.eclipse.emf.common.util.EList;

import org.wso2.developerstudio.eclipse.gmf.esb.KeyType;
import org.wso2.developerstudio.eclipse.gmf.esb.NamespacedProperty;
import org.wso2.developerstudio.eclipse.gmf.esb.RegistryKeyProperty;
import org.wso2.developerstudio.eclipse.gmf.esb.XQueryMediatorInputConnector;
import org.wso2.developerstudio.eclipse.gmf.esb.XQueryMediatorOutputConnector;
import org.wso2.developerstudio.eclipse.gmf.esb.XQueryVariable;

/**
 * A sample validator interface for {@link org.wso2.developerstudio.eclipse.gmf.esb.XQueryMediator}.
 * This doesn't really do anything, and it's not a real EMF artifact.
 * It was generated by the org.eclipse.emf.examples.generator.validator plug-in to illustrate how EMF's code generator can be extended.
 * This can be disabled with -vmargs -Dorg.eclipse.emf.examples.generator.validator=false.
 */
public interface XQueryMediatorValidator {
	boolean validate();

	boolean validateVariables(EList<XQueryVariable> value);
	boolean validateTargetXPath(NamespacedProperty value);
	boolean validateScriptKeyType(KeyType value);
	boolean validateStaticScriptKey(RegistryKeyProperty value);
	boolean validateDynamicScriptKey(NamespacedProperty value);
	boolean validateQueryKey(RegistryKeyProperty value);
	boolean validateInputConnector(XQueryMediatorInputConnector value);
	boolean validateOutputConnector(XQueryMediatorOutputConnector value);
}
